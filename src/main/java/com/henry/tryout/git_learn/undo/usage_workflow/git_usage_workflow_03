变更文件的迁移路径：
    working directory -> staging area -> commit history

命令：
                       git add
    working directory <-> staging area
                       git checkout

                git commit
    staging area <-> commit history
                git checkout???

解释：
step1 假设我们进入到一个新目录，其中有一个 README 文件。
    此时暂存区为空，提交历史为空，HEAD 引用指向未创建的 master 分支；

step2 现在我们想提交该文件，首先需要通过 git add 将其添加到暂存区。
    此时 Git 将：
        #1 在 .git/objects 目录中以该文件的内容生成一个 blob 对象；
        #2 并将此blob 对象的信息 添加到 .git/index 文件中。

step3 接着执行 git commit；
    此时Git会：
        #1 取得暂存区中的内容生成一个 tree 对象 - 该 tree 对象即为工作区文件的永久快照；
        #2 然后创建一个指向该 tree对象的 commit对象；
        #3 最后更新 master引用 来 指向本次提交。

step4 如果我们在工作区编辑了文件，则：
    Git 会：
        #1 将其 与 暂存区现有文件快照进行比较；
        #2 在 git add 了更改的文件后，根据 文件当前内容 生成新的 blob 对象；
        #3 并更新 .git/index 文件中所引用的 ID。
        #4 git commit 的过程与之前类似，但是新的提交对象会：
            #1 以 HEAD 引用指向的提交作为父提交；
            #2 然后更新其引用的 master 指向新创建的提交。

当我们 git checkout 一个分支或提交时，它会：
    #1 修改 HEAD 指向新的分支引用或提交；
    #2 将暂存区填充为 该次提交的文件快照；
    #3 然后将 暂存区的内容 解包复制到工作区中。