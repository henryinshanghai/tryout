初始的提交&分支：
    D —— E(feature)
  /
A —— B —— C(master)

rebase 的执行过程是:
#1 首先找到这两个分支（即当前分支 Feature、 rebase 操作的目标基底分支 Master） 的最近共同祖先提交 A；
#2 然后找到当前分支 相对于该祖先提交的历次提交（D 和 E），并提取相应的修改并存为临时文件；
#3 然后将当前分支指向 目标基底 Master所指向的提交 C；
#4 最后以此作为新的基端, 将之前另存为临时文件的修改 依序应用。

结果：
A —— B —— C(master) —— D‘ —— E’(feature)

我们也可以按上文理解成: 将 Feature 分支的基础从提交 A 改成了提交 C - 看起来就像是从提交 C 创建了该分支，并提交了 D 和 E。
但实际上这只是「看起来」，在内部 Git:
#1 复制了提交 D 和 E 的内容;
#2 创建新的提交 D' 和 E' 并将其应用到特定基础上（A→B→C）。

尽管新的 Feature 分支和之前看起来是一样的，但它是由全新的提交组成的。
rebase 操作的实质是丢弃一些现有的提交，然后相应地新建一些 内容一样但实际上不同的提交。