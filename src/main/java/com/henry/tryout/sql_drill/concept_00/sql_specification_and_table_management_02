SQL(structured query language):结构化查询语言
是：一门语言 - 有自己的标准(如 语法,函数库等)；
作用：用于管理数据；

关系型数据的3个主流产品：
MySQL, MS SQLServer, Oracle；
特征：每个具体产品对 “SQL的规范”都：
    #1 提供了自己的实现；
    #2 与 额外的扩展 - 在标准SQL之外的语法 被称为 SQL方言；

对数据库的管理/各样式的操作：
注：一个 数据库引擎 可以服务多个数据库？？？
常见操作：
    #1 查看所有的数据库；
    #2 创建数据库；
    #3 删除数据库；
    #4 选中数据库；

疑惑：有时候觉得数据库是一个静态的实体，有时候感觉数据库是一个动态的服务...

数据表的相关概念：
    #1 记录：二维表的一行；
    #2 字段：二维表的一列。

SQL规范中所规定的 表字段需要支持的数据类型集合：
    blah blah...
    特征：三大主流产品都会支持 这些个数据类型,但是名称可能略有差异。
    demo: Integer数据类型，在Oracle中使用Number描述，MySQL中使用 int/Integer描述。

MySQL中字段类型的分类：
    #1 Text类型 - 文本；
    #2 Number类型 - 数字；
    #3 Date类型 - 日期。

有了字段类型后，就知道 这一列应该存储怎么样的数据了 - 也就能够定义数据表结构了👇。
数据表的常用操作：
＃１　创建表；- ＣＲＥＡＴＥ　ＴＡＢＬＥ
    ＣＲＥＡＴＥ　ＴＡＢＬＥ　ｐｅｒｓｏｎ　（
        id　ｉｎｔ，
        ｎａｍｅ　ｖａｒｃｈａｒ（１６），
        ｐｈｏｎｅ　ｃｈａｒ（１１）
    ）；

＃２　为表的字段添加约束*5 {null约束, default约束, unique约束, primary key约束, foreign key约束}
    ＮＵＬＬ约束　－　约束 当前字段是否允许为ｎｕｌｌ。
        语法：
            create table person (
                id, int NOT NULL
                uName, varchar(16) NOT NULL, // uName字段的值不允许为null
                phone, char(11) Null // phone字段的值允许为null
            )
    ＤＥＦＡＵＬＴ约束　－　约束　当ＳＱＬ语句没有为字段显式赋值时，则：由数据库统一赋予的默认值。
        语法：
            create table person (
                id int DEFAULT 12,
                uName varchar(16)
            )
    ＵＮＩＱＵＥ约束　－　约束　“某一字段的值”　在表中必须是唯一存在的。
        特征：无法对插入的ｎｕｌｌ值进行约束。
        解释：如果两行记录中，被ｕｎｉｑｕｅ约束的字段的值都为ｎｕｌｌ。则：ｕｎｉｑｕｅ约束会允许这两条记录同时存在
        结论：ｕｎｉｑｕｅ约束对于字段值为null的情况无能为力 /(ㄒoㄒ)/~~
        语法：
            create table person (
                id int,
                uName varchar(16) UNIQUE
            )
    ＰＲＩＭＡＲＹ　ＫＥＹ主键约束　－　约束　“某一行记录”　在数据表中必须是唯一存在的。
        什么叫做 “唯一存在”？
            答：如果已经存在一条记录的指定列的值是aaa，则：不允许其他记录的相同列的值也是aaa；
        特征：
            #1 它可以是一个字段，也可以是多个字段的组合。
            #2 相比于　ｕｎｉｑｕｅ约束 - unique约束用来约束某一个字段的值的唯一性, 而primary key用来约束某一行数据的唯一性。
        语法：
            create table person (
                id int primary key, // 使用单一字段作为主键，应用主键约束
                uName varchar(16)
            )　
            create table person (
                id int,
                uName varchar(16),
                primary key(id, uName) // 使用多个字段组合作为主键，应用主键约束
            )
    ＦＯＲＥＩＧＮ　ＫＥＹ约束　－　　用于关联到其他表的主键
        外键说明：
            case:
                #1 存在两张数据表：订单表、客户表；
                #2 在订单表中添加了 client_id字段，客户表中使用client_id作为客户表的主键；
                #3 order.client_id的数据来源 就是 client.client_id；
            则：订单表中的 client_id字段是 订单表的外键(用于关联到其他表的主键)，而 客户表中的client_id字段 是客户表的主键。
        语法：
            create table orders(
                id_O int NOT NULL,
                orderNo int NOT NULL,
                client_id int,
                PRIMARY KEY(id_O), // 为id_O字段添加主键约束
                FOREIGN KEY(client_id) REFERENCES Client(client_id)
            )

#3 对表的结构进行更新；
    1 为数据表添加新的列；
    2 修改 数据表现有列的属性(列名、列的数据类型)；
    3 删除列；

#4 删除表；

recap:
    #1 不同的数据库对SQL规范都有自己的实现 - 因此会有各自的语法特色；
    #2 在定义数据表之前，需要先定义数据表中字段的类型与名称；
    #3 常见的数据表操作 - {创建表， 为表的字段添加约束*5，对表的结构进行更新}