怎么看软件中的接口？
答：根据某一个功能，学习功能的用法 & 功能的设计。

Ruby on Rails:
诞生契机：
    #1 web开发登堂入室 - web开发从静态页面 -> 动态页面；
        原因：浏览器开始支持Javascript；
    #2 动态web页面开发所涌现的规范 {CGI(Common Gateway Interface), Servlet, JSP...}
    #3 规范很多，因此开发起来很费劲 - Web框架应运而生
        Structs, SpringMVC...
        至此，MVC模式成为Web开发的主流
    #4 更简化的开发 - Ruby on rails横空出世。

是：一个web开发框架；
特征：
    #1 基于MVC模型；
    #2 接口设计非常优秀；
    #3 设计理念 - 约定(default)优于配置。aka 按照默认的配置，就能完成基础功能

Rails提供的3种接口：
#1 Web应用对外暴露的接口 - REST APIs；
#2 开发者编写代码时所使用的接口 - 编码APIs
#3 开发者在开发过程中所使用的接口 - 命令行接口
    比如, 使用命令行命令 来 运行项目；

开发过程 - {需求分析, 代码编写, 代码调试, 软件包调试(命令行接口)}

Ruby的没落：成也MVC，败也MVC。
对于MVC的开发方式，下面几个人物粉墨登场：
    #1 Javascript；
    #2 浏览器V8引擎；
    #3 NodeJs => 前端页面的表现能力越来越强 -> MVC变成了 前端提供页面，后端提供数据。
前端 - {Javascript + NodeJS}
后端 - Spring框架

recap：
#1 查看软件中的接口 - 接口所设计出的用法
#2 火爆一时的Ruby on Rails是接口设计方面的个中翘楚 - 值得学习一下
    接口的3种形式 - {REST接口, 编码接口, 命令行命令}

