使用 Spring的开发者 很多对 Web开发技术都比较熟悉 - 比如SSH技术架构（Struts + Spring + Hibernate）
它们是 Web应用开发中最常见的技术组合。
分工：
    #1 使用 Struts 作为 Web框架 来 构建应用的UI；
    #2 使用 Spring 作为 应用平台；
    #3 使用 Hibernate 作为 数据持久化的实现。
这个技术组合全部由开源软件组成，其中：
    #1 Struts 是Apache旗下的一个项目；
    #2 Hibernate 已经成为 JBoss/RedHat产品组合中的一员；
    #3 Spring 则是一个开源应用平台；

在这个技术组合中， Hibernate 是一个独立的持久化产品， Spring本身并不会提供 自己的 ORM数据持久化方案。
相反地，Spring提供了 JDBC的封装（用来 实现数据持久化）。
不过相比于 Hibernate，功能太过单薄。

虽然在 ORM数据持久层， Spring没有提供自己的解决方案。
但是在 Web UI层面， Spring提供了自己的解决方案，也就是 Spring MVC；

但为什么 Spring会发展成现在的模样呢（提供了 Web层的方案，却没有提供持久层的方案）？
答： Spring尝试了，但是市场给出了自己的选择。😄

总结：在这个技术组合中， Spring的作用是 应用平台。
应用平台是干嘛用的？
答：有点子像应用的操作系统 - 统一管理 应用所需要使用到的资源。
手段：Spring提供了一堆的平台特性 {IoC容器、AOP、事务处理、持久化驱动等}
说明：这里说的平台，意思等同于基础设施。

提升一个视角来看，在软件产品开发中，如果 某一个特性的使用非常普遍，则：
这个特性可能就会 被作为平台的特性 来实现。
好处：平台会对开发者暴露/开放这个特性，开发者因此也就不需要去自己实现这个特性 - 从而提高了开发效率。
类比：现代社会中，有了 电力、网络、铁路、航空等这些基础设施后，整个社会的运行效率 比起 机器工业社会的效率，不可同日而语。

--- 特性的发展与迁移 ---
从 应用特性 -> 平台特性；
就像电的使用一开始是 只有贵族才能享用到的便利。而今 旧时王谢堂前燕，飞入寻常百姓家，
随着社会与经济的发展，电力 开始进入到 普通百姓的正常生活中。

这种特性的演变/发展是 以一种基础设施 和 成熟产品的方式 来 完成的，
因为只有这样才能具备 规模效应，来 分担基础设施建设的前期建设成本。

基于这样一种对比，可以发现，对于 基础软件的开发与应用，
如果采用 开源软件的开发方式 来完成，
则：可以看到开源的开发方式 发挥着非常奇妙的作用。
一方面，通过开源，能够广泛地 手机基础需求；
另一方面，开源又能有效地 分摊 前期的开发、测试以及一些应用培育的成本。
案例：Linux / Spring;

--- 优秀的平台 ---
优秀的平台 对于 提高应用的开发效率 是大有帮助的。
开发者 在使用平台开发软件时，由于平台已经提供了 很多现成的特性实现，
因此 开发者的应用就不再需要 重新构思、设计与实现，而只需要 关注应用需求本身。

