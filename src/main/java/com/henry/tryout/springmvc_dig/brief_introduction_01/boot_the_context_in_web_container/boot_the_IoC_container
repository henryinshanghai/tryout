IoC容器的启动过程，就是创建上下文的过程。
🐖 这里的上下文 指的就是 IoC容器在Web应用环境中的具体叫法；
上下文的分类：
#1 根上下文：
    特征：由 ContextLoaderListener 来 启动；
#2 与Web MVC相关的上下文：
    作用：用于保存 控制器（DispatcherServlet）所需要的MVC对象；
子上下文 与 根上下文一起，组成了 “层次化的上下文体系”。

结论：在 Web容器中，启动 Spring应用程序时，首先会先建立根上下文，然后再建立起整个上下文体系。
🐖 由 ContextLoader 来 建立起这个上下文体系。

--- 在Web容器中，启动Spring应用程序的过程 ---
组件依赖路径：
    ContextLoaderListener -> ContextLoader -> XmlWebApplicationContext

-- 组件说明 --
ContextLoaderListener：
作用：用于在 Web容器中 建立IoC容器；
特征：
    #1 由Spring提供的类；
    #2 实现了 ServletContextListener 接口；
        作用： 提供了 与Servlet生命周期相结合的回调 - {contextInitialized(), contextDestroyed()}
        特征：在 Servlet API中被定义
        应用：
            对于Web容器来说，它会在 contextInitialized()方法中 来 创建 WebApplicationContext;
    #3 它会把 “载入IoC容器”的工作 委托给 ContextLoader（当前类的基类） 来完成


ContextLoader：
作用：基本创建两个IoC容器 - {#1 在Web容器中建立起的双亲IoC容器； #2 生成对应的 WebApplicationContext并将之初始化}；

-- 组件之间的关系 --
ContextLoaderListener 的父类是 ContextLoader - 模板方法，提供创建IoC容器的基本步骤；
ContextLoaderListener 实现了 ServletContextListener - 获取管理Servlet生命周期的能力；


