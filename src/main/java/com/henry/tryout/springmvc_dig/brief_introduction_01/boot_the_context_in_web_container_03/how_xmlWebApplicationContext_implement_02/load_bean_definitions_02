// 使用 XmlBeanDefinitionReader 来 加载/解析 bean定义
protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {
    // （注释）为给定的BeanFactory 来 ”创建一个新的 XmlBeanDefinitionReader“
    // （书本）对于特定类型的context, 需要使用对应类型的Reader 来 对BeanDefinition信息进行解析
    XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);

    // (注释) 使用 这个上下文的 ”资源加载环境“ 来 ”配置 bean definition的读取器“
    beanDefinitionReader.setEnvironment(getEnvironment());
    // (书本) 这里设置 resourceLoader。
    // 由于 XmlWebApplicationReader是 DefaultResource的子类, 因此 这里也会使用 DefaultResourceLoader 来 定位BeanDefinition
    beanDefinitionReader.setResourceLoader(this);
    beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));

    // (注释) 允许子类 去 提供”读取器的自定义初始化“，从而 真正地加载bean定义。
    // （书本）允许子类为 reader配置自定义的初始化过程
    initBeanDefinitionReader(beanDefinitionReader);

    // （书本）这里使用定义好的 XmlBeanDefinitionReader 来 ”载入BeanDefinition“
    loadBeanDefinitions(beanDefinitionReader);
}

recap：
#1 创建一个新的 XmlBeanDefinitionReader对象；
#2 配置 bean definition的读取器；
#3 初始化 bean definition的读取器；
#4 使用读取器 来 载入bean定义。