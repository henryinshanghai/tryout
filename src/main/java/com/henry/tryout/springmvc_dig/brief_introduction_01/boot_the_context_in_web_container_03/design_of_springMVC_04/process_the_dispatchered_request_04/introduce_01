前情回顾：
    #1 DispatcherServlet 对 SpringMVC框架的初始化过程；
    #2 分析 HandlerMapping的实现原理 - 了解控制部分是怎样实现的

fact：初始化完成时，“在上下文环境中定义的所有HandlerMapping” 都已经被加载了。
这些被加载的handlerMappings：
#1 被放在一个List中，并排好了序；
#2 其中存储着 HTTP请求对应的映射数据。
特征：
    #1 这个List中的每一个元素 都对应着一个 具体的handlerMapping的配置；
    #2 一般来说，每一个handlerMapping 都可以持有 一系列 从URL请求到Controller的映射；
    #3 Spring MVC提供了一系列的 HandlerMapping实现。

--- Spring MVC对 HandlerMapping的实现 ---
HandlerMapping接口:
如果一个对象 要定义 请求与处理对象之间的映射的话，则：需要实现这个接口。

-- AbstractHandlerMapping -> HandlerMapping --
一个用于HandlerMapping实现类的抽象基类。
特征：支持排序, 一个默认的handler, handler拦截器, 也包括使用路径模式来映射的 handler拦截器。

- AbstractUrlHandlerMapping -> AbstractHandlerMapping -
用做 “使用URL做映射的 HandlerMapping的实现类” 的抽象基类
特征：支持字面匹配 和 模式匹配，比如 /test/*, /test/**, 以及其他样式的路径。
当解析的模式被启用时，对于模式语法的详情，请参考 PathPattern。
其他情况下，请参考 AntPathMatcher.

它们的语法大体上(largely)相同, 只是 PathPattern的语法 更加为 web应用做了定制(tailored).
并且它的实现也更加有效率。

- SimpleUrlHandlerMapping -> AbstractUrlMapping -
HandlerMapping的一个实现类，用于 从URL 映射到 表示请求处理器的bean。
特征：支持两种映射方式 - {#1 映射到bean的实例; #2 映射到bean的名称}；
对于非单例的handler来说，需要使用后者。
