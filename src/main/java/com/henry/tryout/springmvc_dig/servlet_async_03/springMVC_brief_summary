除了上面这三种springMvc会 “自动处理为异步的返回值” 外还有其他的，比如ResponseBodyEmitter，
具体的大家可以了解一下AsyncHandlerMethodReturnValueHandler接口下的实现类。

了解 “异步编程的四种实现方式”后我们可以总结一下他们的使用场景：

#1 不关心返回值，可以直接使用多线程机制异步处理
#2 在上面的基础上需要返回值，则需要考虑Callable
#3 如果还需要 超时时间配置、执行完成回调、执行异常和“超时后的回调”等功能，则WebAsyncTask是一个很好的选择
#4 如果我们需要自己控制异步的执行，
    如一个调用涉及多个服务，比如客户端请求服务A，服务A需要调用服务B，服务B处理完在通知服务A，然后服务A在响应客户端.
    这种情况比较适合用DeferredResult

后三种的执行流程也大同小异 👇
#1 SpringMVC 根据“返回值类型” 来 查找处理器returnValueHandler
#2 在对应的处理器中，开启异步
#3 容器线程被释放，但是response还是“处于打开状态”
#4 业务处理完成后，再次执行调度流程，如果返回值不是{Callable、WebAsyncTask、DeferredResult}，结果将返回给客户端，结束此次http请求。
