标准的目录布局

为方便以所需格式创建Web应用程序存档文件，
比较方便的方式是： 以 “WAR格式本身所要求的组织方式” 来 安排web应用程序的“可执行”文件(也就是说，Tomcat在执行应用程序时实际使用的文件)
要做到这一点，你将在应用程序的“文档根”目录中得到以下内容:

#1 *.html， *.jsp等-
HTML和JSP页面，以及必须对客户机浏览器可见的其他文件
(如JavaScript、样式表文件和图像)。
在较大的应用程序中，您可以选择将这些文件划分为子目录层次结构，
但对于较小的应用程序，为这些文件只维护一个目录通常要简单得多。


#2 /WEB-INF/web.xml -
应用程序的Web应用程序部署描述符。
这是一个XML文件，描述了组成应用程序的servlet和其他组件，
以及任何初始化参数和 容器管理的你希望服务器为你强制执行安全约束

下面的小节将更详细地讨论该文件。

#3 /WEB-INF/classes/ -
此目录包含应用程序所需的任何Java类文件(以及相关资源)，
包括servlet类和非servlet类，它们没有组合到JAR文件中。
如果开发者的类被组织成Java包，则：必须在/WEB-INF/classes/下的目录层次结构中反映这一点。
例如，一个名为com.mycompany.mypackage.MyServlet的Java类
需要存储在一个名为/WEB-INF/classes/com/mycompany/mypackage/MyServlet.class的文件中。

#4 /WEB-INF/lib/ -
此目录包含 你的应用所需要的 包含Java类文件(以及相关资源)的JAR文件，如第三方类库或JDBC驱动程序。
当您将应用程序安装到Tomcat(或任何其他2.2或更高版本的Servlet容器)时，
    #1 WEB-INF/classes/目录下的类， 以及 #2 WEB-INF/lib/目录下JAR文件中的所有类，会对 #3 你的web应用程序中的其他类可见。
因此，如果您将“所有必需的库类”包含在这些位置之一(请务必检查您使用的任何第三方库的再分发权许可证)，
则：您将简化web应用程序的安装 - 而不需要调整系统类路径(或者在你的服务器上安装全局库文件)。


大部分信息是从Servlet API规范2.3版的第9章中提取出来的。
你可以咨询一下，了解更多细节。



