下面的描述使用了变量名$CATALINA_BASE 来 引用基目录（大多数相对路径将根据该目录解析）。
如果您没有 “通过设置CATALINA_BASE目录为多个实例配置Tomcat”，则：$CATALINA_BASE将被设置为$CATALINA_HOME的值（安装Tomcat的目录）

为了执行，”web应用程序必须部署在servlet容器“上（即使在开发过程中也是如此）。
我们将描述如何“使用Tomcat来提供执行环境”。
web应用程序可以通过以下方法之一部署在Tomcat中:

#1
将解压缩的目录层次结构，复制到目录$CATALINA_BASE/webapps/下的子目录中。
Tomcat将根据您选择的子目录名，为应用程序分配一个“上下文路径”。
我们将在自己构建的build.xml文件中使用这种技术，因为这是开发过程中最快最简单的方法。
确保在安装或更新应用程序后，重新启动Tomcat。

#2
将web应用归档文件复制到$CATALINA_BASE/webapps/目录下。
当Tomcat启动时，它会自动将web应用程序存档文件展开为未打包的形式，并以这种方式执行应用程序。
这种方法通常用于安装一个额外的应用程序（由第三方供应商或您的内部开发人员提供）到现有的Tomcat安装中。
注意-如果您使用这种方法，并希望稍后更新您的应用程序，
您必须同时 #1 替换web应用程序存档文件，#2 并删除Tomcat创建的扩展目录，#3 然后重新启动Tomcat，以便反映（reflect）您的更改。

#3
使用Tomcat “管理器”web应用程序 来 部署和取消部署web应用程序。
Tomcat包含一个web应用程序，默认部署在 /manager 上下文路径上，
它允许开发者 “在运行的Tomcat服务器上部署和取消部署应用程序”，而无需重新启动它。
有关使用Manager web应用程序的更多信息，请参阅Manager应用程序如何操作。

#4
在构建脚本中使用“管理器”Ant任务。
Tomcat包含一组用于Ant构建工具的自定义任务定义，它们 允许开发者自动执行“管理器”web应用程序的命令。
这些任务在Tomcat部署器中使用。

#5
使用Tomcat部署器。
Tomcat包含一个捆绑Ant任务的打包工具，
并可用于自动预编译jsp（它们是部署到服务器之前web应用程序的一部分）。


在“其他servlet容器”上部署应用程序是特定于每个容器的，
但是所有与Servlet API规范(版本2.2或更高版本)兼容的容器 都需要能够接受一个“web应用程序存档文件”。
注意，其他容器不需要 #1 接受解包的目录结构(就像Tomcat那样)，或者 #2 为共享库文件提供机制，但是这些特性通常是可用的。


