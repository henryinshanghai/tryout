block也是方法，只是“最后一个参数”有特定的类型。

=== 语法demo ===

=== 代码示例 ===

block是一种“一次性配置'构建元素'的多个方面”的机制。
它们还提供了一种“嵌套配置”的方法，从而形成一种“结构化数据”的形式。

你应该了解block的两个重要方面:
    #1 它们被实现为“具有特定签名的方法”。
    #2 它们可以更改未限定的（unqualified）方法和属性的目标(“委托”)。

两个特性 都基于Groovy语言特性，我们将在下面的小节中解释它们。

=== block方法签名 ===
通过方法的签名，或者更具体地说，它的参数类型，可以很容易地 将“方法”识别为“块背后的实现”。
如果一个方法“对应于”一个block,则：
    #1 它必须至少有一个参数。
    #2 最后一个参数必须是 groovy.lang.Closure 或 org.gradle.api.Action 类型。

例如，Project.copy(Action)方法就“匹配/满足”这些需求，因此你可以使用以下语法:
copy {
    into "$buildDir/tmp"
    from 'custom-resources'
}

这就导致了 into() 和 from() 如何工作的问题。
它们显然是方法，但是在API文档中哪里可以找到它们呢?答案来自于对“对象委托（delegation）”的理解。




