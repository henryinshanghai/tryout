Gradle使用两个主要目录 来 执行和管理它的工作: #1 Gradle用户主目录 和 #2 Project根目录。
下面两个部分描述了它们“各自存储的内容”，以及“如何清理瞬态（transient）文件和目录”。

Gradle用户主目录
Gradle用户的主目录(默认为 <当前用户>的home目录/.gradle)
作用：用于“存储全局配置属性” 和 “初始化脚本”，以及 “缓存” 和 “日志文件”。
它的大致结构如下:
{12345678}

#1 全局缓存目录(用于与项目无关的所有内容)
#2 特定于版本的缓存(例如，支持增量构建)
#3 共享缓存(例如用于依赖工件)
#4 Gradle Daemon的注册表和日志
#5 全局初始化脚本
#6 工具链支持下载的jdk
#7 Gradle Wrapper下载的发行版
#8 全局Gradle配置属性


--- 缓存和分发的清理 ---
Gradle自动清理用户主目录。
默认情况下，当Gradle守护进程停止或关闭时，清理将在后台运行。
如果使用——no-daemon，它会在构建会话之后 在前台运行，并显示一个可视的进度指示器。

定期应用以下清理策略(默认为每24小时一次):
    #1 检查caches/<gradle-version>/中的特定版本缓存是否仍在使用。
        如果没有，发布版本的目录将在30天不活动后被删除，快照版本将在7天不活动后被删除。

    #2 缓存/(例如jars-*)中的共享缓存将检查它们是否仍在使用中。
        如果没有Gradle版本仍然在使用它们，它们就会被删除。

    #3 当前Gradle版本在缓存/中使用的共享缓存中的文件(例如jars-3或modules-2)将检查它们最后一次访问的时间。
        根据文件是否可以在本地重新创建或必须再次从远程存储库下载，将分别在7天或30天未被访问后删除该文件。

    #4 检查wrapper/dist/中的Gradle分发是否仍在使用，即是否有相应的特定版本的缓存目录。
        未使用的发行版将被删除。

--- 配置“缓存和分发的清理” ---
可以配置各种缓存的保留期。缓存分为四类:
    #1 已发布的包装器发行版: 与已发布版本(例如4.6.2或8.0)相对应的发行版和相关的特定于版本的缓存。
        未使用版本的默认保留时间为30天。

    #2 快照包装器分布:
        与快照版本对应的分布和相关的特定于版本的缓存(例如7.6-20221130141522+0000)。未使用版本的默认保留时间为7天。

    #3 下载资源:从远程存储库下载的共享缓存(例如，缓存的依赖项)。未使用资源的默认保留时间为30天。

    #4 创建的资源:由Gradle在构建过程中创建的共享缓存(例如工件转换)。未使用资源的默认保留时间为7天。

每个类别的保留期可以通过Gradle User Home中的init脚本单独配置:
/Gradle用户家目录中的文件

剩下的内容与 构建脚本的编写没啥关系，跳过