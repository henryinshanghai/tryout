您可以使用Gradle命令 来 运行Gradle构建。
原理：gradle命令 会在当前目录查找一个名为build.gradle的文件。[2]
我们称这个 build.gradle 为一个“构建脚本”，尽管严格来说它是一个“构建的配置脚本”，我们将在后面看到。
构建脚本中定义了“项目及其任务”。

要尝试这一点，请创建以下构建脚本build.gradle。

第一个构建脚本 build.gradle
/简单示例文件

在命令行shell中，移动到包含脚本的目录(containing directory)，并使用gradle -q hello执行构建脚本:

-q是做什么的?
    本用户指南中的大多数示例都使用-q命令行选项运行。
    这将“抑制Gradle的日志消息”，因此只显示任务的输出。
    这使得本用户指南中的示例输出更加清晰。
    如果您不想使用此选项，则不需要使用。
    有关影响Gradle输出的命令行选项的更多详细信息，请参见日志记录。

这是怎么回事? 这个构建脚本定义了一个名为hello的任务，并向其添加了一个操作。
当你运行gradle hello时，gradle执行了“hello任务”，这个任务反过来执行“你所提供的动作”。
该操作只是一个包含一些“要执行的代码”的块。

如果您认为这与Ant的目标相似，那么您就对了。
Gradle任务相当于Ant目标，但正如您将看到的，它们要强大得多。
我们使用了与Ant不同的术语，因为我们认为“任务”这个词比目标这个词更具表现力（expressive）。
不幸的是，当Ant调用它的命令(如javac或copy)任务时，这会与Ant产生术语冲突（clash）。
所以当我们谈论任务时，我们 总是指Gradle任务，它相当于Ant的目标。
如果我们谈论“Ant任务(Ant命令)”，我们显式地说“Ant任务”。

