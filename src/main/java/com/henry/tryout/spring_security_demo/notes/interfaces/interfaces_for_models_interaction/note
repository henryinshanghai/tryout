#1 核心模型/抽象/概念：
    Authentication - 表示 认证请求的代币 或者 一个已经被认证过的主体
    AuthenticationManager - 处理 Authentication 请求

#2 扩展模型(实现类、依赖等)：
    Authentication的扩展模型 - {SecurityContext, SecurityContextHolder}
    AuthenticationManager的扩展模型 - {ProviderManager, AuthenticationProvider}

#3 功能的入口组件：
    AbstractAuthenticationProcessingFilter - 认证时所使用到的一个 基础的 Filter；

======
模型之间是怎么交互 来 完成功能的？
手段：借助模型之间交互的接口；

#1 入口类： UsernamePasswordAuthenticationFilter 过滤器类；
用于支持认证的接口：attemptAuthentication()方法
关联类：
    #1 父类：AbstractAuthenticationProcessingFilter ；
        交互接口： #1 doFilter()方法； #2 attemptAuthentication()方法；
    #2 依赖类：
        #1 Authentication ；
        #2 AuthenticationManager / ProviderManager;

#2 ProviderManager - 处理认证请求；
关联类：
    #1 父类/接口 - AuthenticationManager ；
    #2 依赖类 - AuthenticationProvider ;
交互接口：

#3 AbstractUserDetailsAuthenticationProvider - 执行认证过程
交互接口：

#4 DaoAuthenticationProvider - 实现认证的关键步骤

