#1 命名相关的坏味道；
    命名是否具有业务含义;
    命名是否符合英文语法；

#2 函数相关的坏味道：
    方法的行数是否超过20行；
    方法的参数是否超过3个；

#3 类相关的坏味道：
    类中的字段是否超过10个；
    多个类之间的依赖关系 是不是符合架构规则；

#4 语句相关的坏味道；
    是不是使用了for循环语句；
    是不是使用了else子句；
    是否存在重复的switch语句；
    一行代码中是否出现了 连续的方法调用；
    代码中是否出现了 setter()方法的调用；
    变量在声明后，有没有马上进行赋值；
    集合声明之后，有没有马上添加元素；
    方法的返回值是不是能够使用 Optional；

-- 坏味道的诊断原则：SOLID原则 --
S - 单一职责原则
O - 开闭原则
L - 里氏替换原则
I - 接口隔离原则
D - 依赖导致原则

-- 常见的重构手段 --
抽取局部变量、方法、类等

-- 进行重构的保障：测试 --
作用：确保重构前后的代码，实现的作用是完全相同的
