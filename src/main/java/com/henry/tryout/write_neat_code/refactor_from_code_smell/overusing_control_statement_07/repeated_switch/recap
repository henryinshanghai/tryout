original VS. refactor

#1 区分“用户等级”：
original的实现手段： Level 枚举类，列举出了所有的用户等级；
refactor的实现手段：UserLevel接口的所有实现类，每个实现类代表了一种用户等级；

#2 根据用户等级，选择执行对应的业务动作：
original的实现手段：使用 switch语法，来用代码显式地（静态地）做选择；
refactor的实现手段：使用 UserLevel接口&实现类，借助Java的多态特性，来 在运行时动态地做选择；

#3 从模型的丰富程度来看：
original中就只有一个 Level枚举类 - 模型简单，无法承载更多功能
refactor中存在 UserLevel接口模型 & 一堆的实现类模型 - 模型丰富，因此可以借助Java提供的多态特性，做动态选择。

启示：合适而丰富的模型，有助于写出 简洁的客户端/业务代码。