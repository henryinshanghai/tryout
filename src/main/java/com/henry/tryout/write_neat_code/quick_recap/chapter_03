在项目中积极地使用 Optional：
所有可能为null的返回值，都应该声明为 Optional类型；

循环语句本身就是一个坏味道，因为 开发者其实有了更好的 ‘遍历集合的方式’。
fact：集合的大部分操作，都可以归类为 列表转换操作 {map、filter、reduce}

明明很多文章说，使用了 lambda表达式的代码会更有表达性。但为什么反而更难看懂了呢？
答：好的lambda表达式应该只有一行代码，不能写得太复杂。
如果处理本身很复杂的话，可以抽取出一个方法。然后在lambda表达式的地方，使用 方法引用的语法。

代码评审是为了暴露问题，因此问题越多越好。

如果某一个必须要做的工作与业务不直接相关（比如定时做一些操作），则：
开发者应该为此工作（调度）添加新的模型，从而将之与核心业务类隔离。
好处：#1 核心业务类因此更加稳定； #2 可以在新模型中引入更多用于调用的字段；
需要引入新模型的根本原因：定时信息 与 章节业务 两者发生变化的原因各不相同，需求可能根本就来自于不同的团队。

