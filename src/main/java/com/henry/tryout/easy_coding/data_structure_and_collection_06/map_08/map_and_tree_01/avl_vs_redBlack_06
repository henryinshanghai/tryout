四个方面的比较：
#1 平衡性；
AVL是严格的平衡树，左右子树的高度差 <= 1, 而红黑树只是一种大致的平衡；
    aka 相同节点数量的情况下，红黑树的高度可能会更高，所以 平均查找次数要更多；

#2 插入节点时
插入操作时，AVL树 与 红黑树都能够在 至多两次旋转 中恢复平衡；

#3 删除节点时
删除操作时，红黑树能够在 至多三次旋转 内恢复平衡，而AVL树(由于追求绝对的平衡，可能会惊动树上的所有节点)需要O(logn)次旋转；

#4 回溯动作
另外，AVL树在插入与删除节点时，会有 向上回溯的动作 来确定 "是否需要旋转"。这个动作的成本最差为 O(logn);
相比而言，红黑树向上回溯的步长固定为2，成本比AVL树要低。

结论：
    如果是频繁的插入与删除，红黑树更合适；
    如果是低频修改、大量查询时，AVL树更合适；