线程池相关的源码 很是精炼
其中包含的关键操作有：
    线程池的销毁、任务提取和消费等；
线程池本身也有自己的状态转化流程（和线程相似）；

使用线程池时需要注意的事项：
#1 合理设置各种参数，尤其根绝实际的业务场景来设置合理的工作线程数量；
#2 线程资源 必须要通过线程池来提供 - 不允许在程序中显式地创建线程对象；
#3 创建线程/线程池的时候，给它指定有意义的名称 - 方便出错时进行回溯。

线程池不允许使用 Executors来创建(因为无界队列容易导致OOM)，应该使用 ThreadPoolExecutor创建。
好处：
    1 能够更加明确 线程池的运行规则；
    2 能够规避 资源耗尽的风险。