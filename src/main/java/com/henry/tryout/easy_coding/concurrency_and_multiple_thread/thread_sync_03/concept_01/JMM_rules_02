Java内存模型

happen before规则：
# 传递性
    a happen before b -> hb(a, b)
    如果 hb(a, b), 并且 hb(b, c),则：hb(a, c).这是一种传递性

fact:
    1 线程的执行 与 线程的切换 都是纳秒级别的。
    2 由于CPU执行速度 与 CPU读取缓存速度 之间存在巨大差异，因此缓存必不可少。
        CPU访问一次内存，就相当于去一趟滴水湖了

------
指令优化：
    有些指令放在一起执行效率会更高，且单线程条件下，不会影响最终结果。
解释：
    你要去还书，然后再借一本；
    你室友请你帮忙换一本 Easy Coding,再借一本 《码出高效：Java开发手册》；
    如果 先办你自己的事情，再去办你室友的事情，就属于单线程的死板行为。
    不自觉的指令优化：
        把你自己要归还的书 与 Easy Coding一起归还，然后再一次性借出需要的书。
        aka 合并了数据的存 与 取操作。
fact： CPU在处理指令时，也会进行指令优化。分析哪些取数据的动作可以合并，哪些读数据的动作可以合并