垃圾回收算法的具体实现 - Garbage Collector

具体的3种 - Serial、CMS、G1 （SCG）

Serial回收器：
    特征：
        1 主要用于 YGC（年轻代垃圾回收）；
        2 采用串行单线程的方式 完成GC任务；
        3 GC过程种的STW阶段(Stop The World)会 暂停整个应用程序的执行。
    评价：FGC的时间比较长，可能会影响到程序性能。


CMS回收器（Concurrent Mark Sweep Collector）：
    特征：
        1 回收停顿时间比较短；
        2 比较常用的GC回收器；
        3 实现的是 标记-清除 算法，所以会产生大量的内存空间碎片。
    步骤：
        1 初始标记； // 会引发 STW
        2 并发标记；
        3 重新标记； // 会引发 STW
        4 并发清除；
    用法：
        配置 -XX:+UseCMSCompactAtFullCollection参数，以此 强制 JVM在FGC完成之后：
            - 1 对老年代进行压缩；
            - 2 执行空间碎片的整理 - 这个过程会引发 STW。

G1回收器：
    特征：
        1 暂停时间更加可控 - 能够尽可能快地在指定时间中完成垃圾回收任务。
        2 不需要一个连续的内存空间 来 管理对象；
        3 使用的是 Mark-Copy算法， 因此不会产生大量的空间碎片。
        4 在JDK11中， G1垃圾回收器已经成为默认的垃圾回收器了。
    原理：
        1 把 Java的堆空间 分成了 很多个大小相同的区域(region) - Eden, SUrvivor, Old, Humongous.
            Humongous是特殊的Old类型，用于放置大的对象；
        2 把空间分为多个区域中，优先回收 垃圾最多的区域；


