fact: Java是 静态强类型语言；
常见的代码： 根据某个类 来声明一个引用变量，去指向 被创建的对象。
aka 实例化一个类，得到类的实例对象，并绑定到一个 引用变量上。

从执行步骤来分析 对象的实例化过程：
step1： 确定类的元信息是不是存在；
    原理：JVM在接收到new指令时，首先在 metaspace中检查 所需要创建的类元信息是否存在；
        如果不存在，遵守 双亲委派模型，使用当前类加载器，以 ClassLoader + 包名 + 类名 作为Key 来查找对应的.class文件。
            如果没有找到文件，会抛出 ClassNotFoundException异常；
            如果找到，则：进行类加载，并生成对应的Class类对象。

step2： 为对象分配内存空间；
    原理：1 计算对象占用的空间大小。
        如果成员变量是 引用变量，则：只分配引用变量的空间。aka 4个字节大小
        2 在堆中为对象分配 空间；
        特征：
            1 在分配内存空间时，需要进行同步操作（加锁，CAS失败重试等），以此保证 分配操作的原子性。
            2 引用变量会被添加到 虚拟机栈的栈顶。

step3 设置默认值；
    类中所有的成员变量都会被设置各自形式的零值。

step4 设置对象头；
    作用：设置 新对象的哈希码、GC信息、锁信息、对象所属的类元信息 - 取决于 JVM的具体实现

Step5 执行init方法；
    作用：
        1 初始化成员变量；
        2 执行实例化代码块；
        3 调用类的构造方法；
        4 把堆内存中 对象的首地址 赋值给 引用变量。 - 复制操作，其实是把对象的首地址赋值给引用变量；