类加载器时怎么定位到具体的类文件并读取呢？

类加载器的层级
最高一层：Bootstrap类加载器
作用：是最根基的类加载器，负责加载 最核心的Java类型，比如 Object，System，String等
特征：
    1 它是在在JVM启动时创建的；
    2 一般是由 与操作系统相关的本地代码实现的；

第二层：平台类加载器
作用：用来加载一些扩展的系统类（比如 xml, 加密,压缩相关的功能类）。
特征：
    1 由Java语言实现；

第三层：应用类加载器
作用：用来加载 CLASSPATH下用户自定义的类型。
特征：
    1 由Java语言来实现；

查看本地类加载器；
手段：class对象.getClassLoader()

------
wrap up:
    类加载器存在等级制度，但却并不是继承关系。而是用组合的方式 来 复用父加载器的功能。

原理：不同层级的多个类加载器的工作方式：
01 在 低层次类加载器 需要加载一个未知的类时，需要向上逐级询问：这个类又被您加载过吗？
02 当 高层次类加载 接到询问后，会自问两个问题：
    #1 我是不是已经加载过这个类了？
    #2 如果没有，我是不是有能力加载这个类？
03 在 所有高层次类加载器 对以上两个问题的答案都是 no时，当前 类加载器才能够 “加载这个类”。

一般情况下，JVM启动时加载的类会非常多。
因此 调试的时候很难捕捉到 某个指定类的加载过程，这时候 可以使用条件断点功能。


