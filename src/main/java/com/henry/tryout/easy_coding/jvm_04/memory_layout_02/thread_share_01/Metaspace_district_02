2 Metaspace（元空间）

早在 JDK8版本中，元空间的前身 Perm区已经被淘汰了。
特征：
    1 在JDK7及之前的版本中，只有 Hotspot才有 Perm区域；
    2 被译为 永久代，它在启动时固定大小，很难进行调优。
    3 在某些场景下，如果动态加载类过多，容易产生 Perm区的OOM -
        某个实际Web工程中，如果功能点比较多，在运行过程中，要不断动态加载很多的类，经常出现致命错误：- OOM：PermGenspace
        解决手段：需要设定运行参数 -XX:MaxPermSize=1280m, 如果部署到新机器上，往往会因为JVM参数没有修改导致故障再现。
        - 这需要人为参与，不熟悉此应用的人排查问题时往往苦不堪言。
    4 而且，永久代在垃圾回收过程中还存在诸多问题。

所以 在JDK8中使用元空间 替换 永久代。
特征：
    1 在JDK8及以上版本上，如果再去设定 MaxPermSize参数的话，JVM启动时并不会报错。但是会提示： warning...
    2 区别于永久代，元空间在本地内存中分配。
    3 在JDK8中，Perm区中的所有内容中：
        - 字符串常量 移到 “堆内存”区域中；
        - 其他内容包括 类元信息、字段、静态属性、方法、常量(5个类别)都移到 “元空间”内。
            比如 Object类元信息、静态属性System.out、整型常量 1000000

在常量池中的String，其实际对象 是被保存在 堆内存中的。
