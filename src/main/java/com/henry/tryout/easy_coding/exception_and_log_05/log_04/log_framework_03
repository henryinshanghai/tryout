日志框架的相关名词：
log4j、logback、jdk-logging、slf4j、commons-logging

日志框架的分类：
    1 日志门面；
    2 日志适配器；
    3 日志库；

日志门面：
- 设计模式之门面设计模式
    作用：门面本身提供了一套接口规范；
    特征：
        1 门面自身 不负责 日志功能的实现；
        2 门面的使用者 不需要关注 底层具体是用哪一个日志库来实现日志打印的;
        3 日志框架使用了门面模式。
    应用：
        slf4j 与 commons-logging.

---
日志库
    作用：具体实现了日志相关的功能；
    类别：log4j、log-jdk、logback；
    特征：
        1 log4j是最早诞生的日志库；
        2 随后JDK1.4也引入了一个日志库 log-jdk; // 有了两种日志库之后，开发者在编码时，就需要关注日志库的细节了
        3 最后出现的是 logback，它和log4j是同一个作者，并且实现了 slf4j的接口约定。

---
日志适配器
分类：
    1 日志门面适配器；
        背景：slf4j规范提出的时间比较晚，先前的日志库（log4j）没有实现slf4j所规定的接口。
        所以，如果想要在项目中使用 slf4j + log4j的组合，就需要一个 适配器来解决接口不兼容的问题 - slf4j-log4j2
    2 日志库适配器；
        背景：在老项目中，代码直接使用了日志库的API。现在想要把这种方式 改变为 门面模式(slf4j + logback),怎么办？
        直接改动代码，工作量很大，而且难保不会遗漏。
        手段：使用一个适配器，把旧日志库的API 路由到 slf4j。
        特征：
            1 在不改动原有代码的情况下，也能够使用slf4j来统一管理日志；
            2 后面如果想要替换日志库的话，也会非常简单。

======
Next: 在项目中添加日志功能；

1 在新项目 使用日志门面(slf4j)的方式；
2 使用了log4j的老项目 使用日志的方式； 门面适配器
3 代码中使用了log4j API的项目 使用日志的方式； 日志库适配器

使用slf4j + 日志库的方式时，防止日志库（log4j VS. logback）冲突 - 这可能导致日志不打印的情况发生