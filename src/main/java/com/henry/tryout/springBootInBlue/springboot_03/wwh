Java开发笨重吗？
繁多的配置； why?
低下的开发效率； why?
复杂的部署流程； why?
第三方技术集成难度大； why?

这些个问题的解决方案：SpringBoot。
问题是怎样被解决的？
1 习惯优于配置；
    项目中存在有大量的配置类，对于常见的场景，使用这些个配置类 + 自动配置的条件 -> 无需配置即可按照预期工作；
作用：
    很容易地创建出一个项目；
    这个项目：
        1 可以独立运行(因为SpringBoot内置了 Servlet容器)；
        2 准生产级别 - 不是简单地hello world,而是考虑了很多生产时的场景；
        3 项目使用了Spring框架来管理项目中的bean实例 & 实例之间的依赖关系。
        4 几乎不需要做什么配置；

Spring Boot的核心特性：
1 独立运行的Spring项目；
    因为最终得到的构建工件是一个jar包。 所以可以直接使用java -jar xxx.jar的方式来运行。
2 内嵌了Servlet容器；
    这样就省去了传统的部署环节；
3 提供了starter来简化配置；
    starter帮助程序员从更高的级别上引入依赖包。
4 对Spring项目进行自动化的配置；
    SpringBoot会根据 类路径中存在的jar包、类型 来 为jar包中的类自动配置Bean【有点子抽象😵】。
5 准生产级别的应用监控；
    Spring Boot 提供了 多种方式 使得程序员能够对应用进行运行时的监控。
6 无代码生成 与 xml配置；
    自动化配置的原理：条件化注解(Spring4.x提供的特性)
    Spring4.x中的配置： 提倡使用Java类型配置 + 注解配置的方式；
    Spring Boot中的配置：不需要任何的xml文件 就能完成项目的所有配置。


具体Spring Boot的创建与使用：参见 tryout_springboot